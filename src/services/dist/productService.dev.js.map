{"version":3,"sources":["productService.js"],"names":["API_URL","getAllProducts","axios","get","response","data","console","log","message","getProductById","id","error","addProduct","formData","post","headers","updateProduct","productData","put","deleteProduct"],"mappings":";;;;;;;;;;;AAAA;;;;AAGA;AACA,IAAMA,OAAO,GAAG,uBAAhB;;AAGA,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2BC,kBAAMC,GAAN,CAAUH,OAAO,GAAG,WAApB,CAF3B;;AAAA;AAEUI,UAAAA,QAFV;AAAA,2CAGWA,QAAQ,CAACC,IAHpB;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,YAAMC,OAAlD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAeC,cAAf,CAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2BR,kBAAMC,GAAN,CAAUH,OAAO,sBAAaU,EAAb,CAAjB,CAF3B;;AAAA;AAEUN,UAAAA,QAFV;AAAA,4CAGWA,QAAQ,CAACC,IAHpB;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACK,KAAR,0CAAgDD,EAAhD;AALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAeE,UAAf,CAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2BX,kBAAMY,IAAN,CAAWd,OAAO,GAAG,UAArB,EAAiCa,QAAjC,EAA2C;AAChEE,YAAAA,OAAO,EAAE;AACP,8BAAgB,qBADT,CACgC;;AADhC;AADuD,WAA3C,CAF3B;;AAAA;AAEUX,UAAAA,QAFV;AAAA,4CAOWA,QAAQ,CAACC,IAPpB;;AAAA;AAAA;AAAA;AASIC,UAAAA,OAAO,CAACK,KAAR,CAAc,uBAAd;AATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAeK,aAAf,CAA6BN,EAA7B,EAAiCO,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2Bf,kBAAMgB,GAAN,CAAUlB,OAAO,sBAAeU,EAAf,CAAjB,EAAsCO,WAAtC,CAF3B;;AAAA;AAEUb,UAAAA,QAFV;AAAA,4CAGWA,QAAQ,CAACC,IAHpB;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACK,KAAR,0CAAgDD,EAAhD;AALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAeS,aAAf,CAA6BT,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2BR,4BAAaF,OAAO,sBAAaU,EAAb,CAApB,CAF3B;;AAAA;AAEUN,UAAAA,QAFV;AAAA,4CAGWA,QAAQ,CAACC,IAHpB;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACK,KAAR,0CAAgDD,EAAhD;AALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\n\n//const API_URL = \"https://backend-e-commerce-9fdb.onrender.com\";\nconst API_URL = 'http://localhost:4000'\n\n\nasync function getAllProducts() {\n  try {\n    const response = await axios.get(API_URL + \"/products\");\n    return response.data;\n  } catch (error) {\n    console.log('Error fetching all products:', error.message)\n  }\n}\n\nasync function getProductById(id) {\n  try {\n    const response = await axios.get(API_URL+`/product/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching product with id ${id}:`, error);\n    throw error;\n  }\n}\n\nasync function addProduct(formData) {\n  try {\n    const response = await axios.post(API_URL + '/product', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data', // Set content type for file upload\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding product:', error);\n    throw error;\n  }\n}\n\nasync function updateProduct(id, productData) {\n  try {\n    const response = await axios.put(API_URL + `/product/${id}`, productData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating product with id ${id}:`, error);\n    throw error;\n  }\n}\n\n\n\nasync function deleteProduct(id) {\n  try {\n    const response = await axios.delete(API_URL+`/product/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting product with id ${id}:`, error);\n    throw error;\n  }\n}\n\nexport { getAllProducts, getProductById, addProduct, updateProduct, deleteProduct };"],"file":"productService.dev.js"}