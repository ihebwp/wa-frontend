{"version":3,"sources":["authService.js"],"names":["API_URL","register","userData","axios","post","response","data","localStorage","setItem","JSON","stringify","token","login","id","_id","user","getCurrentUser","userID","get","getAllUsers","deleteUser","userId","logout","removeItem","authService"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA,IAAMA,OAAO,GAAG,uBAAhB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACQC,kBAAMC,IAAN,CAAWJ,OAAO,GAAE,SAApB,EAA+BE,QAA/B,CADR;;AAAA;AACTG,UAAAA,QADS;;AAGf,cAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBC,YAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,IAAT,CAAcK,KAA7B,CAA7B;AACD;;AALc,2CAORN,QAAQ,CAACC,IAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB,C,CAUA;;;AACA,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAAOV,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACWC,kBAAMC,IAAN,CAAWJ,OAAO,GAAE,QAApB,EAA8BE,QAA9B,CADX;;AAAA;AACNG,UAAAA,QADM;;AAGZ,cAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBC,YAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,KAAK,EAAGN,QAAQ,CAACC,IAAT,CAAcK,KAAvB;AAA8BE,cAAAA,EAAE,EAAGR,QAAQ,CAACC,IAAT,CAAcQ,GAAjD;AAAqDC,cAAAA,IAAI,EAAEV,QAAQ,CAACC,IAAT,CAAcS;AAAzE,aAAf,CAA7B;AACD;;AALW,4CAOLV,QAAQ,CAACC,IAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd,C,CAUA;;;AACA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACEd,kBAAMe,GAAN,CAAUlB,OAAO,GAAGiB,MAApB,CADF;;AAAA;AACfZ,UAAAA,QADe;AAAA,4CAEdA,QAAQ,CAACC,IAFK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAKA;;;AACA,IAAMa,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACKhB,kBAAMe,GAAN,CAAUlB,OAAO,GAAG,QAApB,CADL;;AAAA;AACZK,UAAAA,QADY;AAAA,4CAEXA,QAAQ,CAACC,IAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAKA;;;AACA,IAAMc,UAAU,GAAG,SAAbA,UAAa,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACMlB,sCAAgBH,OAAhB,oBAAiCqB,MAAjC,EADN;;AAAA;AACXhB,UAAAA,QADW;AAAA,4CAEVA,QAAQ,CAACC,IAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB,C,CAKA;;;AACA,IAAMgB,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBf,EAAAA,YAAY,CAACgB,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,IAAMC,WAAW,GAAG;AAClBvB,EAAAA,QAAQ,EAARA,QADkB;AAElBqB,EAAAA,MAAM,EAANA,MAFkB;AAGlBV,EAAAA,KAAK,EAALA,KAHkB;AAIlBI,EAAAA,cAAc,EAAdA,cAJkB;AAKlBG,EAAAA,WAAW,EAAXA,WALkB;AAMlBC,EAAAA,UAAU,EAAVA;AANkB,CAApB;eASeI,W","sourcesContent":["import axios from 'axios'\n\n//const API_URL = 'http://backend-e-commerce-9fdb.onrender.com'\nconst API_URL = 'http://localhost:4000'\n\n// Register user\nconst register = async (userData) => {\n  const response = await axios.post(API_URL +'/signup', userData)\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data.token))\n  }\n\n  return response.data\n}\n\n// Login user\nconst login = async (userData) => {\n  const response = await axios.post(API_URL +'/login', userData)\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify({token : response.data.token, id : response.data._id,user: response.data.user}))\n  }\n\n  return response.data\n}\n\n// Get current user \nconst getCurrentUser = async(userID) => {\n  const response = await axios.get(API_URL + userID)\n  return response.data\n}\n\n// Get All users\nconst getAllUsers = async() => {\n  const response = await axios.get(API_URL + \"/users\")\n  return response.data\n}\n\n// Delete user\nconst deleteUser = async (userId) => {\n  const response = await axios.delete(`${API_URL}/users/${userId}`)\n  return response.data\n}\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('user')\n}\n\nconst authService = {\n  register,\n  logout,\n  login,\n  getCurrentUser,\n  getAllUsers,\n  deleteUser \n}\n\nexport default authService\n"],"file":"authService.dev.js"}