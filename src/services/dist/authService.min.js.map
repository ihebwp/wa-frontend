{"version":3,"sources":["authService.js"],"names":["_axios","_interopRequireDefault","require","API_URL","register","userData","response","regeneratorRuntime","async","_context","prev","next","awrap","axios","post","sent","data","localStorage","setItem","JSON","stringify","token","abrupt","stop","login","_context2","id","_id","user","getCurrentUser","userID","_context3","get","getAllUsers","_context4","deleteUser","userId","_context5","logout","removeItem","authService"],"mappings":"2FAAA,IAAAA,OAAAC,uBAAAC,QAAA,kFAGA,IAAMC,QAAU,wBAGVC,SAAW,SAAOC,GAAP,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MANjBC,OAAAA,QAAAC,KAAAX,QAAA,UAAAE,IAMiB,KAAA,EAAA,OANjBC,EAMiBG,EAAAM,MAGFC,MACXC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUd,EAASU,KAAKK,QAJ7CZ,EAAAa,OAAA,SAORhB,EAASU,MAPD,KAAA,EAAA,IAAA,MAAA,OAAAP,EAAAc,WAAAC,MAAA,SAAAnB,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAd,KAAA,EAAAJ,mBAAAK,MAAAC,OAAAA,QAAAC,KAAAX,QAAA,SAAAE,IAAA,KAAA,EAAA,OAAAC,EAAAmB,EAAAV,MAAAC,MAAAC,aAAAC,QAAA,OAAAC,KAAAC,UACQP,CAAAA,MAAAA,EAAWV,KAAAA,MAASuB,GAAApB,EAAWD,KADvCsB,IAAAC,KAAAtB,EAAAU,KAAAY,QAAAH,EAAAH,OAAA,SACThB,EADSU,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAS,EAAAF,WAKdM,eAAA,SAAAC,GAAA,IAAAxB,EAAA,OAAAC,mBAAAC,MAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAAAoB,EAAApB,KAAA,EAAAJ,mBAAAK,MAkBsBC,OAAAA,QAAMmB,IAAI7B,QAAU2B,IAlB1C,KAAA,EAAA,OAkBKxB,EAlBLyB,EAAAhB,KAAAgB,EAAAT,OAAA,SALchB,EAAAU,MAKd,KAAA,EAAA,IAAA,MAAA,OAAAe,EAAAR,WALcU,YAAA,WAAA,IAAA3B,EAAA,OAAAC,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAvB,KAAA,EAAAJ,mBAAAK,MAAAC,OAAAA,QAAAmB,IAAA7B,QAAA,WAAA,KAAA,EAAA,OAAAG,EAAA4B,EAAAnB,KAAAmB,EAAAZ,OAAA,SAAAhB,EAAAU,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAkB,EAAAX,WAkCXY,WAAa,SAAOC,GAAP,IAAA9B,EAAA,OAAAC,mBAAAC,MAAA,SAAA6B,GAAA,OAAA,OAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,KAAA,EAAA,OAAA0B,EAAA1B,KAAA,EAAAJ,mBAAAK,MAvBbY,OAAAA,QAAAA,OAAAA,GAAAA,OAAQrB,QAARqB,WAAAA,OAAQY,KAuBK,KAAA,EAAA,OAvBbZ,EAuBaa,EAAAtB,KAAAsB,EAAAf,OAAA,SAvBLhB,EAAAU,MAuBK,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAAd,WAvBLe,OAAA,WAAArB,aAAAsB,WAAA,SAAAC,YAAA,CACNlC,SAAAA,SAkCNgC,OAAAA,OAhCAd,MAAAA,MACEP,eAAAA,eAA6CI,YAAAA,YAA6BK,WAAAA,qBAC3Ec","file":"authService.min.js","sourcesContent":["import axios from 'axios'\n\n//const API_URL = 'http://backend-e-commerce-9fdb.onrender.com'\nconst API_URL = 'http://localhost:4000'\n\n// Register user\nconst register = async (userData) => {\n  const response = await axios.post(API_URL +'/signup', userData)\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data.token))\n  }\n\n  return response.data\n}\n\n// Login user\nconst login = async (userData) => {\n  const response = await axios.post(API_URL +'/login', userData)\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify({token : response.data.token, id : response.data._id,user: response.data.user}))\n  }\n\n  return response.data\n}\n\n// Get current user \nconst getCurrentUser = async(userID) => {\n  const response = await axios.get(API_URL + userID)\n  return response.data\n}\n\n// Get All users\nconst getAllUsers = async() => {\n  const response = await axios.get(API_URL + \"/users\")\n  return response.data\n}\n\n// Delete user\nconst deleteUser = async (userId) => {\n  const response = await axios.delete(`${API_URL}/users/${userId}`)\n  return response.data\n}\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('user')\n}\n\nconst authService = {\n  register,\n  logout,\n  login,\n  getCurrentUser,\n  getAllUsers,\n  deleteUser \n}\n\nexport default authService\n"]}