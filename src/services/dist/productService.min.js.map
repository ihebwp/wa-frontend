{"version":3,"sources":["productService.js"],"names":["_axios","_interopRequireDefault","require","API_URL","getAllProducts","response","regeneratorRuntime","async","_context","prev","next","awrap","axios","get","sent","abrupt","data","t0","console","log","message","stop","getProductById","id","_context2","concat","error","addProduct","formData","_context3","post","Content-Type","updateProduct","productData","_context4","put","deleteProduct","_context5"],"mappings":"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","file":"productService.min.js","sourcesContent":["import axios from \"axios\";\n\n\n//const API_URL = \"https://backend-e-commerce-9fdb.onrender.com\";\nconst API_URL = 'http://localhost:4000'\n\n\nasync function getAllProducts() {\n  try {\n    const response = await axios.get(API_URL + \"/products\");\n    return response.data;\n  } catch (error) {\n    console.log('Error fetching all products:', error.message)\n  }\n}\n\nasync function getProductById(id) {\n  try {\n    const response = await axios.get(API_URL+`/product/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching product with id ${id}:`, error);\n    throw error;\n  }\n}\n\nasync function addProduct(formData) {\n  try {\n    const response = await axios.post(API_URL + '/product', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data', // Set content type for file upload\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding product:', error);\n    throw error;\n  }\n}\n\nasync function updateProduct(id, productData) {\n  try {\n    const response = await axios.put(API_URL + `/product/${id}`, productData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating product with id ${id}:`, error);\n    throw error;\n  }\n}\n\n\n\nasync function deleteProduct(id) {\n  try {\n    const response = await axios.delete(API_URL+`/product/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting product with id ${id}:`, error);\n    throw error;\n  }\n}\n\nexport { getAllProducts, getProductById, addProduct, updateProduct, deleteProduct };"]}